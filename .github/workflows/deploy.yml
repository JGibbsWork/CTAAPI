name: Deploy CTAAAPI to Mac Mini

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  APP_NAME: CTAAAPI

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure Docker environment
      run: |
        echo "Deploying ${{ github.repository }} from organization ${{ github.repository_owner }}"
        
        # Create Docker config directory
        mkdir -p ~/.docker
        
        # Create config without keychain
        cat > ~/.docker/config.json << 'EOF'
        {
          "auths": {},
          "credsStore": "",
          "credHelpers": {},
          "experimental": "disabled"
        }
        EOF
        
        # Test Docker access
        echo "Testing Docker access..."
        docker --version
        
    - name: Set up deployment directory
      run: |
        DEPLOY_DIR=~/deployments/${{ env.APP_NAME }}
        echo "Cleaning up old deployment..."
        
        # Stop any existing container
        docker stop ctaaapi-production 2>/dev/null || true
        docker rm ctaaapi-production 2>/dev/null || true
        
        # Clean up directory
        rm -rf $DEPLOY_DIR
        mkdir -p $DEPLOY_DIR
        
        echo "Copying new code..."
        cp -r $GITHUB_WORKSPACE/* $DEPLOY_DIR/
        
    - name: Copy secrets and credentials
      run: |
        DEPLOY_DIR=~/deployments/${{ env.APP_NAME }}
        APP_SECRETS=~/secrets/${{ env.APP_NAME }}
        
        echo "Copying environment file..."
        if [ -f "$APP_SECRETS/production.env" ]; then
          cp $APP_SECRETS/production.env $DEPLOY_DIR/.env
          echo "✅ Environment file copied as .env"
        else
          echo "❌ Environment file not found at $APP_SECRETS/production.env"
          exit 1
        fi
        
        echo "Copying service account credentials..."
        if [ -f "$APP_SECRETS/service-account.json" ]; then
          cp $APP_SECRETS/service-account.json $DEPLOY_DIR/service-account.json
          echo "✅ Service account file copied"
        else
          echo "❌ Service account file not found at $APP_SECRETS/service-account.json"
          exit 1
        fi
        
    - name: Build and start container
      env:
        DOCKER_CONFIG: ~/.docker
        DOCKER_BUILDKIT: 0
      run: |
        cd ~/deployments/${{ env.APP_NAME }}
        echo "Building CTAAAPI for organization ${{ github.repository_owner }}..."
        
        # Stop any existing container
        docker stop ctaaapi-production 2>/dev/null || true
        docker rm ctaaapi-production 2>/dev/null || true
        
        # Build the image
        docker build --no-cache -t ctaaapi:latest .
        
        # Run the container
        docker run -d \
          --name ctaaapi-production \
          --restart unless-stopped \
          -p 3001:3001 \
          -v $(pwd)/service-account.json:/usr/src/app/service-account.json:ro \
          --env-file .env \
          -e NODE_ENV=production \
          -e PORT=3001 \
          ctaaapi:latest
        
    - name: Verify deployment
      run: |
        echo "Waiting for container to start..."
        sleep 15
        
        echo "Checking container status..."
        docker ps | grep ctaaapi-production
        
        echo "Testing health endpoint..."
        if curl -f http://localhost:3001/health; then
          echo "✅ CTAAAPI deployment successful!"
        else
          echo "❌ Health check failed"
          echo "Container logs:"
          docker logs ctaaapi-production
          exit 1
        fi
        
    - name: Clean up old images
      run: |
        docker image prune -f --filter label=app=CTAAAPI || true
        
    - name: Show final status
      run: |
        echo "=== Final Status ==="
        docker ps | grep ctaaapi-production
        echo "CTAAAPI is available at http://localhost:3001"